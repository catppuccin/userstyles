#__m3 {
  .rgb(@id, @color) {
    --@{id}: @color;
    --@{id}-rgb: #lib.rgbify(@color)[];
  }

  .token(@id, @color) {
    --@{prefix}@{id}: @color;
    --@{prefix}@{id}-rgb: #lib.rgbify(@color)[];
  }

  .token-content(@id, @color, @content) {
    --@{prefix}@{id}: @color;
    --@{prefix}@{id}-rgb: #lib.rgbify(@color)[];
    
    --@{prefix}on-@{id}: @content;
    --@{prefix}on-@{id}-rgb: #lib.rgbify(@content)[];
  }

  .token-content-container(@id, @color, @content) {
    .token-content(@id, @color, @content);

    --@{prefix}@{id}-container: mix(@color, @base, @m3-tint);
    --@{prefix}@{id}-container-rgb: #lib.rgbify(mix(@color, @base, @m3-tint))[];
    --@{prefix}on-@{id}-container: lighten(@color, @m3-emphasize);
    --@{prefix}on-@{id}-container-rgb: #lib.rgbify(lighten(@color, @m3-emphasize))[];
  }

  .base() {
    @m3-primary: @accent;
    @m3-secondary: desaturate(@accent, 30%);
    @m3-tertiary: lighten(@accent, 5%);

    @m3-fixed-primary: @m3-fixed-flavor[@@accentColor];
    @m3-fixed-secondary: desaturate(@m3-fixed-flavor[@@accentColor], 30%);
    @m3-fixed-tertiary: lighten(@m3-fixed-flavor[@@accentColor], 5%);
    @m3-fixed-on-accent: @m3-fixed-flavor[@base];

    @m3-fixed-flavor: @catppuccin[@mocha];

    @m3-emphasize: if(@flavor = latte, -30%, 12.5%);
    @m3-deemphasize: 10%;
    @m3-tint: if(@flavor = latte, 25%, 30%);

    @m3-inverse-flavor: if(@flavor = latte, mocha, latte);
    @m3-black: @m3-fixed-flavor[@crust];
  }

  .with-prefix(@prefix) {
    // Container should be mixed with base, instead of using opacity.
    .token-content-container(error, @red, @base);
    .token-content-container(primary, @m3-primary, @base);
    .token-content-container(secondary, @m3-secondary, @base);
    .token-content-container(tertiary, @m3-tertiary, @base);

    // Fixed variants
    .token-content(primary-fixed, @m3-fixed-primary, @m3-fixed-on-accent);
    .token(on-primary-fixed-variant, @m3-fixed-on-accent);
    .token(primary-fixed-dim, darken(@m3-fixed-primary, @m3-deemphasize));

    .token-content(secondary-fixed, @m3-fixed-secondary, @m3-fixed-on-accent);
    .token(on-secondary-fixed-variant, @m3-fixed-on-accent);
    .token(secondary-fixed-dim, darken(@m3-fixed-secondary, @m3-deemphasize));

    .token-content(tertiary-fixed, @m3-fixed-tertiary, @m3-fixed-on-accent);
    .token(on-tertiary-fixed-variant, @m3-fixed-on-accent);
    .token(tertiary-fixed-dim, darken(@m3-fixed-tertiary, @m3-deemphasize));

    // Elevation scale
    .token(surface-container-lowest, @crust);
    .token-content(surface, @mantle, @text);
    .token-content(background, @mantle, @text);
    .token(surface-dim, @mantle);
    .token(surface-container-low, @base);
    .token(surface-container, @surface0);
    .token(surface-container-high, @surface1);
    .token(surface-container-highest, @surface2);
    .token(surface-bright, @overlay0);
    .token-content(surface-variant, @overlay1, @subtext0);
    // Elevation scale end

    // Inverse variants
    .token(inverse-primary, @catppuccin[@@m3-inverse-flavor][@@accentColor]);
    .token(inverse-surface, @text);
    .token(inverse-on-surface, @base);

    // Outline/Disabled text
    .token(outline, @overlay2);
    .token(outline-variant, @overlay0);

    // Backdrop
    .token(scrim, @m3-black);
    .token(shadow, @m3-black);

    // Deprecated
    .token(surface-tint, @accent);
  }
}
