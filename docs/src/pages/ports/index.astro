---
import Card from "../../components/ShowcaseCard.astro";
import FluidGrid from "../../components/FluidGrid.astro";
import { ports } from "../../lib/port";
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import { Markdown } from 'astro-remote';

// Helper: convert slug-like categories â†’ Title Case
function formatCategory(cat: string) {
  return cat
    .replace(/[-_]/g, " ")
    .replace(/\b\w/g, (c) => c.toUpperCase());
}

// Group ports by category
const categoryMap: Record<string, typeof ports> = {};
for (const port of ports) {
  for (const cat of port.categories) {
    if (!categoryMap[cat]) categoryMap[cat] = [];
    categoryMap[cat].push(port);
  }
}

// Sort categories alphabetically
const categories = Object.keys(categoryMap).sort();

// Build headings for Starlight sidebar
const headings = categories.map((cat) => ({
  depth: 2,
  slug: formatCategory(cat).toLowerCase().replace(/\s+/g, "-"),
  text: formatCategory(cat),
}));
---

<StarlightPage frontmatter={{ title: "Ports" }} headings={headings}>
  <div class="prose">
    <p>This is the full list of ports grouped by category.</p>

    {categories.map((cat) => {
      const formatted = formatCategory(cat);
      return (
        <section>
          <h2 id={formatted.toLowerCase().replace(/\s+/g, "-")}>{formatted}</h2>
          <FluidGrid>
            {categoryMap[cat]
              .sort((a, b) => a.name.localeCompare(b.name))
              .map((port) => (
                <Card
                  title={port.name}
                  href={`https://github.com/catppuccin/userstyles/tree/main/styles/${port.slug}`}
                >
                  {port.note && (
                    <Markdown content={port.note} />
                  )}
                </Card>
              ))}
          </FluidGrid>
        </section>
      );
    })}
  </div>
</StarlightPage>