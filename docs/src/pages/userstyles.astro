---
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import AnchorHeading from '@astrojs/starlight/components/AnchorHeading.astro';
import Card from "../components/ShowcaseCard.astro";
import FluidGrid from "../components/FluidGrid.astro";
import { ports } from "../lib/ports";
import { getCategories } from "../lib/categories";
import { Markdown } from 'astro-remote';

const categories = await getCategories();

// Group ports by category
const categoryMap: Record<string, typeof ports> = {};
for (const port of ports) {
  for (const cat of port.categories) {
    if (!categoryMap[cat]) categoryMap[cat] = [];
    categoryMap[cat].push(port);
  }
}

// Sort categories by name
const sortedCats = Object.keys(categoryMap).sort((a, b) => {
  const aName = categories[a]?.name ?? a;
  const bName = categories[b]?.name ?? b;
  return aName.localeCompare(bName);
});

// Sidebar headings
const headings = sortedCats.map((cat) => {
  const { name } = categories[cat];
  return {
    depth: 2,
    slug: cat,
    text: name,
  };
});
---

<StarlightPage frontmatter={{ title: "Userstyles" }} headings={headings}>
  <p>This is the full list of ports grouped by category.</p>

  {sortedCats.map((cat) => {
    const category = categories[cat];
    return (
      <>
        <AnchorHeading level="2" id={cat}>{category.emoji}{' '}{category.name}</AnchorHeading>
        {category.description && <p class="text-neutral-600">{category.description}</p>}
        <FluidGrid>
          {categoryMap[cat]
            .sort((a, b) => a.name.localeCompare(b.name))
            .map((port) => (
              <Card
                title={port.name}
                href={`https://github.com/catppuccin/userstyles/tree/main/styles/${port.slug}`}
              >
                {port.note && (
                  <Markdown content={port.note} />
                )}
              </Card>
            ))}
        </FluidGrid>
      </>
    );
  })}
</StarlightPage>
